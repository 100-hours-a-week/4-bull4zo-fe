name: React CI/CD - Unified

on:
  push:
    branches:
      # - main
      - develop
      - release/**
      - cicd/**

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

    steps:
      - name: Set environment variables based on branch
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
            echo "vite_command=pnpm prd-build" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
            echo "vite_command=pnpm build" >> $GITHUB_OUTPUT
          fi

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build with Vite (with env)
        run: |
          ${{ steps.set-env.outputs.vite_command }}
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
          VITE_KAKAO_AUTH_CLIENT_ID: ${{ secrets.VITE_KAKAO_AUTH_CLIENT_ID }}
          VITE_KAKAO_AUTH_URL: ${{ secrets.VITE_KAKAO_AUTH_URL }}
          VITE_PUBLIC_MSW: ${{ secrets.VITE_PUBLIC_MSW }}

      - name: Write credentials JSON to file
        run: echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > $HOME/gcp-key.json

      - name: Authenticate to GCP manually
        run: |
          gcloud auth activate-service-account --key-file=$HOME/gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup gcloud CLI manually
        run: |
          gcloud auth list
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GCS
        run: |
          gsutil -m rsync -r -d dist gs://${{ secrets.GCS_BUCKET_NAME }}
          gsutil web set -m index.html -e index.html gs://${{ secrets.GCS_BUCKET_NAME }}

      - name: Invalidate Cloud CDN cache
        run: |
          gcloud compute url-maps invalidate-cdn-cache ${{ secrets.GCP_URL_MAP_NAME }} \
            --path "/*" \
            --project=${{ secrets.GCP_PROJECT_ID }}
